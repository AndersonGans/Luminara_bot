# calculator.py
import datetime

# –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞ –ø–ª–∞–Ω–µ—Ç (–ø—Ä–∏–º–µ—Ä ‚Äî –ø–æ–¥—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–∏ —Å–∏–º–≤–æ–ª—ã, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
PLANET_MAP = {
    1: ("–°–æ–ª–Ω—Ü–µ", "‚òÄÔ∏è"),
    2: ("–õ—É–Ω–∞", "üåë"),
    3: ("–Æ–ø–∏—Ç–µ—Ä", "‚ôÉ"),
    4: ("–†–∞—Ö—É", "‚òæ"),
    5: ("–ú–µ—Ä–∫—É—Ä–∏–π", "‚òø"),
    6: ("–í–µ–Ω–µ—Ä–∞", "‚ôÄÔ∏è"),
    7: ("–ö–µ—Ç—É", "‚òæ"),
    8: ("–°–∞—Ç—É—Ä–Ω", "‚ôÑ"),
    9: ("–ú–∞—Ä—Å", "‚ôÇÔ∏è"),
}

def reduce_to_digit(n: int) -> int:
    """–°–≤–æ–¥–∏—Ç –ª—é–±–æ–µ —á–∏—Å–ª–æ –∫ –¥–∏–≥–∏—Ç—É 1‚Äì9."""
    while n > 9:
        n = sum(int(d) for d in str(n))
    return n or 9

def calculate_personal_numbers(day: int, month: int, year: int) -> dict:
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç:
      ‚Ä¢ –õ–∏—á–Ω—ã–π –≥–æ–¥ (py)
      ‚Ä¢ –õ–∏—á–Ω—ã–π –º–µ—Å—è—Ü (pm)
      ‚Ä¢ –õ–∏—á–Ω—ã–π –¥–µ–Ω—å (pd)
      ‚Ä¢ –ß–∏—Å–ª–æ –ª–∏—á–Ω–æ—Å—Ç–∏ (per)
      ‚Ä¢ –ß–∏—Å–ª–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è (pr)
    –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å —Ü–∏—Ñ—Ä–∞–º–∏ –∏ —Å–∏–º–≤–æ–ª–∞–º–∏.
    """
    today = datetime.date.today()

    # 1) –õ–∏—á–Ω—ã–π –≥–æ–¥ = –¥–µ–Ω—å+–º–µ—Å—è—Ü+–≥–æ–¥ –æ–±—Ä–∞—â–µ–Ω–∏—è
    py = reduce_to_digit(sum(int(d) for d in f"{day:02d}{month:02d}{today.year}"))

    # 2) –õ–∏—á–Ω—ã–π –º–µ—Å—è—Ü = –õ–ì + –º–µ—Å—è—Ü –æ–±—Ä–∞—â–µ–Ω–∏—è
    pm = reduce_to_digit(py + today.month)

    # 3) –õ–∏—á–Ω—ã–π –¥–µ–Ω—å = –õ–ú + –¥–µ–Ω—å –æ–±—Ä–∞—â–µ–Ω–∏—è
    pd = reduce_to_digit(pm + today.day)

    # 4) –ß–∏—Å–ª–æ –ª–∏—á–Ω–æ—Å—Ç–∏ = —Å—É–º–º–∞ —Ü–∏—Ñ—Ä –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è
    per = reduce_to_digit(sum(int(d) for d in f"{day:02d}"))

    # 5) –ß–∏—Å–ª–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è = —Å—É–º–º–∞ –≤—Å–µ—Ö —Ü–∏—Ñ—Ä –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
    pr = reduce_to_digit(sum(int(d) for d in f"{day:02d}{month:02d}{year}"))

    return {
        "year": py,              "year_symbol": PLANET_MAP[py][1],
        "month": pm,             "month_symbol": PLANET_MAP[pm][1],
        "day": pd,               "day_symbol": PLANET_MAP[pd][1],
        "personality": per,      "personality_symbol": PLANET_MAP[per][1],
        "perception": pr,        "perception_symbol": PLANET_MAP[pr][1],
    }
